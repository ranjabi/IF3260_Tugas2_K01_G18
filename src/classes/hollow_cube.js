import BaseObject from "./object.js";
import Point from "./vertex.js";
import Color from "./color.js";

export default class HollowCube extends BaseObject {
    constructor() {
        super();
        this.initCube();
    }

    initCube() {
        this.quad(1, 0, 3, 2);
        this.quad(2, 3, 7, 6);
        this.quad(3, 0, 4, 7);
        this.quad(6, 5, 1, 2);
        this.quad(4, 5, 6, 7);
        this.quad(5, 4, 0, 1);
    }

    quad(a, b, c, d) {
        // create a rectangle using indices of the vertices
        // follows right hand rule
        let indices = [a, b, c, a, c, d];
        let vertices = this.baseVertices();

        let vertexColors = [
            [0.0, 0.0, 0.0, 1.0], // black
            [1.0, 0.0, 0.0, 1.0], // red
            [1.0, 1.0, 0.0, 1.0], // yellow
            [0.0, 1.0, 0.0, 1.0], // green
            [0.0, 0.0, 1.0, 1.0], // blue
            [1.0, 0.0, 1.0, 1.0], // magenta
            [0.0, 1.0, 1.0, 1.0], // cyan
            [1.0, 1.0, 1.0, 1.0], // white
        ];

        for (let j = 0; j < vertices.length / 8; j++) {
            for (let i = 0; i < indices.length; ++i) {
                let [x, y, z] = vertices[indices[i] + 8 * j];
                let point = new Point(x, y, z);
                let color = new Color(...vertexColors[a])
                this.vertices.push(point);
                this.colors.push(color);
            }
        }
    }

    baseVertices() {
        return [
            // 8 small cube placed on the corners of the big cube each with 6 faces (2 triangles each)
            // (x, y, z) coordinates

            //top left front
            [-0.3, 0.3, -0.3],
            [0.2, 0.3, -0.3],
            [0.2, 0.3, -0.2],
            [-0.3, 0.3, -0.2],
            [-0.3, 0.4, -0.3],
            [0.2, 0.4, -0.3],
            [0.2, 0.4, -0.2],
            [-0.3, 0.4, -0.2],

            [-0.3, 0.3, -0.3],
            [-0.2, 0.3, -0.3],
            [-0.2, 0.3, -0.2],
            [-0.3, 0.3, -0.2],
            [-0.3, -0.2, -0.3],
            [-0.2, -0.2, -0.3],
            [-0.2, -0.2, -0.2],
            [-0.3, -0.2, -0.2],

            [-0.3, 0.3, -0.3],
            [-0.2, 0.3, -0.3],
            [-0.2, 0.3, 0.2],
            [-0.3, 0.3, 0.2],
            [-0.3, 0.4, -0.3],
            [-0.2, 0.4, -0.3],
            [-0.2, 0.4, 0.2],
            [-0.3, 0.4, 0.2],

            //top right front
            [0.3, 0.3, -0.3],
            [-0.2, 0.3, -0.3],
            [-0.2, 0.3, -0.2],
            [0.3, 0.3, -0.2],
            [0.3, 0.4, -0.3],
            [-0.2, 0.4, -0.3],
            [-0.2, 0.4, -0.2],
            [0.3, 0.4, -0.2],

            [0.3, 0.3, -0.3],
            [0.4, 0.3, -0.3],
            [0.4, 0.3, -0.2],
            [0.3, 0.3, -0.2],
            [0.3, -0.2, -0.3],
            [0.4, -0.2, -0.3],
            [0.4, -0.2, -0.2],
            [0.3, -0.2, -0.2],

            [0.3, 0.3, -0.3],
            [0.4, 0.3, -0.3],
            [0.4, 0.3, 0.2],
            [0.3, 0.3, 0.2],
            [0.3, 0.4, -0.3],
            [0.4, 0.4, -0.3],
            [0.4, 0.4, 0.2],
            [0.3, 0.4, 0.2],

            // bottom right front
            [0.3, -0.3, -0.3],
            [-0.2, -0.3, -0.3],
            [-0.2, -0.3, -0.2],
            [0.3, -0.3, -0.2],
            [0.3, -0.2, -0.3],
            [-0.2, -0.2, -0.3],
            [-0.2, -0.2, -0.2],
            [0.3, -0.2, -0.2],

            [0.3, -0.3, -0.3],
            [0.4, -0.3, -0.3],
            [0.4, -0.3, -0.2],
            [0.3, -0.3, -0.2],
            [0.3, 0.2, -0.3],
            [0.4, 0.2, -0.3],
            [0.4, 0.2, -0.2],
            [0.3, 0.2, -0.2],

            [0.3, -0.3, -0.3],
            [0.4, -0.3, -0.3],
            [0.4, -0.3, 0.2],
            [0.3, -0.3, 0.2],
            [0.3, -0.2, -0.3],
            [0.4, -0.2, -0.3],
            [0.4, -0.2, 0.2],
            [0.3, -0.2, 0.2],

            // bottom left front
            [-0.3, -0.3, -0.3],
            [0.2, -0.3, -0.3],
            [0.2, -0.3, -0.2],
            [-0.3, -0.3, -0.2],
            [-0.3, -0.2, -0.3],
            [0.2, -0.2, -0.3],
            [0.2, -0.2, -0.2],
            [-0.3, -0.2, -0.2],

            [-0.3, -0.3, -0.3],
            [-0.2, -0.3, -0.3],
            [-0.2, -0.3, -0.2],
            [-0.3, -0.3, -0.2],
            [-0.3, 0.2, -0.3],
            [-0.2, 0.2, -0.3],
            [-0.2, 0.2, -0.2],
            [-0.3, 0.2, -0.2],

            [-0.3, -0.3, -0.3],
            [-0.2, -0.3, -0.3],
            [-0.2, -0.3, 0.2],
            [-0.3, -0.3, 0.2],
            [-0.3, -0.2, -0.3],
            [-0.2, -0.2, -0.3],
            [-0.2, -0.2, 0.2],
            [-0.3, -0.2, 0.2],

            // top right back
            [0.3, 0.3, 0.3],
            [-0.2, 0.3, 0.3],
            [-0.2, 0.3, 0.4],
            [0.3, 0.3, 0.4],
            [0.3, 0.4, 0.3],
            [-0.2, 0.4, 0.3],
            [-0.2, 0.4, 0.4],
            [0.3, 0.4, 0.4],

            [0.3, 0.3, 0.3],
            [0.4, 0.3, 0.3],
            [0.4, 0.3, 0.4],
            [0.3, 0.3, 0.4],
            [0.3, -0.2, 0.3],
            [0.4, -0.2, 0.3],
            [0.4, -0.2, 0.4],
            [0.3, -0.2, 0.4],

            [0.3, 0.3, 0.3],
            [0.4, 0.3, 0.3],
            [0.4, 0.3, -0.2],
            [0.3, 0.3, -0.2],
            [0.3, 0.4, 0.3],
            [0.4, 0.4, 0.3],
            [0.4, 0.4, -0.2],
            [0.3, 0.4, -0.2],

            // top left back
            [-0.3, 0.3, 0.3],
            [0.2, 0.3, 0.3],
            [0.2, 0.3, 0.4],
            [-0.3, 0.3, 0.4],
            [-0.3, 0.4, 0.3],
            [0.2, 0.4, 0.3],
            [0.2, 0.4, 0.4],
            [-0.3, 0.4, 0.4],

            [-0.3, 0.3, 0.3],
            [-0.2, 0.3, 0.3],
            [-0.2, 0.3, 0.4],
            [-0.3, 0.3, 0.4],
            [-0.3, -0.2, 0.3],
            [-0.2, -0.2, 0.3],
            [-0.2, -0.2, 0.4],
            [-0.3, -0.2, 0.4],

            [-0.3, 0.3, 0.3],
            [-0.2, 0.3, 0.3],
            [-0.2, 0.3, -0.2],
            [-0.3, 0.3, -0.2],
            [-0.3, 0.4, 0.3],
            [-0.2, 0.4, 0.3],
            [-0.2, 0.4, -0.2],
            [-0.3, 0.4, -0.2],

            // bottom left back
            [-0.3, -0.3, 0.3],
            [0.2, -0.3, 0.3],
            [0.2, -0.3, 0.4],
            [-0.3, -0.3, 0.4],
            [-0.3, -0.2, 0.3],
            [0.2, -0.2, 0.3],
            [0.2, -0.2, 0.4],
            [-0.3, -0.2, 0.4],

            [-0.3, -0.3, 0.3],
            [-0.2, -0.3, 0.3],
            [-0.2, -0.3, 0.4],
            [-0.3, -0.3, 0.4],
            [-0.3, 0.2, 0.3],
            [-0.2, 0.2, 0.3],
            [-0.2, 0.2, 0.4],
            [-0.3, 0.2, 0.4],

            [-0.3, -0.3, 0.3],
            [-0.2, -0.3, 0.3],
            [-0.2, -0.3, -0.2],
            [-0.3, -0.3, -0.2],
            [-0.3, -0.2, 0.3],
            [-0.2, -0.2, 0.3],
            [-0.2, -0.2, -0.2],
            [-0.3, -0.2, -0.2],

            // bottom right back
            [0.3, -0.3, 0.3],
            [-0.2, -0.3, 0.3],
            [-0.2, -0.3, 0.4],
            [0.3, -0.3, 0.4],
            [0.3, -0.2, 0.3],
            [-0.2, -0.2, 0.3],
            [-0.2, -0.2, 0.4],
            [0.3, -0.2, 0.4],

            [0.3, -0.3, 0.3],
            [0.4, -0.3, 0.3],
            [0.4, -0.3, 0.4],
            [0.3, -0.3, 0.4],
            [0.3, 0.2, 0.3],
            [0.4, 0.2, 0.3],
            [0.4, 0.2, 0.4],
            [0.3, 0.2, 0.4],

            [0.3, -0.3, 0.3],
            [0.4, -0.3, 0.3],
            [0.4, -0.3, -0.2],
            [0.3, -0.3, -0.2],
            [0.3, -0.2, 0.3],
            [0.4, -0.2, 0.3],
            [0.4, -0.2, -0.2],
            [0.3, -0.2, -0.2],
        ];
    }
}